# name: Java Test with TestLoginRunner

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}

#       - name: Set up JDK 11
#         uses: actions/setup-java@v4
#         with:
#           java-version: '11'
#           distribution: 'adopt'

#       - name: Navigate to project directory
#         run: cd UI_Automation_Project  # Adjust if your project directory is different

#       - name: Build and Test with Maven
#         run: |
#           mvn -f UI_Automation_Project/pom.xml clean test-compile -Dmaven.compiler.source=11 -Dmaven.compiler.target=11
#           mvn -f UI_Automation_Project/pom.xml test -Dtest=com.api.uiAutomation.UI_Automation_Project.login.TestLoginRunner -DfailIfNoTests=false
          
#       - name: Generate Karate HTML Reports
#         run: mvn -f UI_Automation_Project/pom.xml verify

#       - name: Archive Karate HTML Reports
#         uses: actions/upload-artifact@v4
#         with:
#           name: karate-reports
#           path: UI_Automation_Project/target/surefire-reports



name: Karate Tests
 
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
 
jobs:
  test:
    runs-on: ubuntu-latest  
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('UI_Automation_Project/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
 
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'  # Specify the distribution
 
      - name: Install dependencies
        run: mvn clean install -DskipTests
        working-directory: UI_Automation_Project  # Set the working directory to swaglab
 
      - name: Run Login Scenarios
        working-directory: UI_Automation_Project  # Set the working directory to swaglab
        run: |
          mvn clean test -Dtest=com.api.uiAutomation.UI_Automation_Project.login.TestLoginRunner -Dmaven.test.failure.ignore=true
 
      #- name: Archive test results
       # if: always()
        #uses: actions/upload-artifact@v2
        #with:
         # name: test-results
          #path: swaglab/target/surefire-reports
      - name: Upload Surefire Test Report
        if: always()  # Always run this step
        uses: actions/upload-artifact@v2
        with:
          name: surefire-test-report
          path: UI_Automation_Project/target/surefire-reports
 
      - name: Generate Karate Test Report
        if: always()  # Always run this step
        run: |
          mkdir -p karate-reports
          cp -r UI_Automation_Project/target/karate-reports/* karate-reports/
      - name: Upload Karate Test Report
        if: always()  # Always run this step
        uses: actions/upload-artifact@v2
        with:
          name: karate-test-report
          path: karate-reports
